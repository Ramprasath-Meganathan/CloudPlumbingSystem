{"ast":null,"code":"var _jsxFileName = \"/Users/ramprasathmeganathan/NodeProjects/ServerlessGITProjectRepo/ServerlessProject/src/Components/Register.js\";\nimport React, { Component } from 'react';\nimport { register } from './UserFunctions';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      confirmpassword: '',\n      role: 'student',\n      errors: []\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const errors = validate(this.state.firstname, this.state.lastname, this.state.email, this.state.password, this.state.confirmpassword);\n\n    if (errors.length > 0) {\n      this.setState({\n        errors\n      });\n      setTimeout(() => {\n        this.setState({\n          errors: []\n        });\n      }, 3000);\n    } else {\n      window.alert('success');\n      this.state.firstname = '';\n      this.state.lastname = '';\n      this.state.email = '';\n      this.state.password = '';\n      this.state.confirmpassword = '';\n      this.state.role = 'student';\n      this.errors = [];\n      this.setState({\n        errors\n      }); // const user = {\n      //     firstname: this.state.firstname,\n      //     lastname: this.state.lastname,\n      //     email: this.state.email,\n      //     password: this.state.password,\n      //     role: this.state.role\n      // }\n      // register(user).then(res => {\n      //     console.log(res)\n      //     if (res === 'User already registered') {\n      //         errors.push(res)\n      //         this.setState({ errors });\n      //     }\n      //     else if (res === undefined) {\n      //         errors.push('User already registered')\n      //         this.setState({ errors });\n      //     }\n      //     else {\n      //         window.alert('User Registered successfully')\n      //         this.props.history.push('/')\n      //     }\n      // }).catch(err => {\n      //     if (err) {\n      //         errors.email('something wrong with the registration')\n      //     }\n      // })\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 mt-5 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"h3 mb-3 font-weight-normal text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 41\n      }\n    }, \"Please Register\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"firstname\",\n      placeholder: \"Enter first name\",\n      value: this.state.firstname,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"lastname\",\n      placeholder: \"Enter last name\",\n      value: this.state.lastname,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      name: \"email\",\n      placeholder: \"Enter email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      placeholder: \"Enter password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"confirmpassword\",\n      placeholder: \"Re-enter password\",\n      value: this.state.confirmpassword,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      defaultValue: this.state.role,\n      onChange: this.onChange,\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"student\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 49\n      }\n    }, \"student\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"staff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 49\n      }\n    }, \"staff\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-md btn-primary btn-block\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    }, \"Next\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 41\n      }\n    }), errors.map(error => /*#__PURE__*/React.createElement(\"p\", {\n      key: error,\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 45\n      }\n    }, \"Error on Page: \", error))));\n  }\n\n}\n\nconst validate = (firstname, lastname, email, password, confirmpassword) => {\n  const errors = [];\n  const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\n  if (firstname.length === 0) {\n    errors.push('first name is required');\n  }\n\n  if (lastname.length === 0) {\n    errors.push('last name is required');\n  }\n\n  if (!validEmailRegex.test(email)) {\n    errors.push(\"Email id is not valid\");\n  }\n\n  if (password < 1) {\n    errors.push(\"Password should be atleast 6 characters long\");\n  }\n\n  if (password != confirmpassword) {\n    errors.push(\"Password and confirm password should match\");\n  }\n\n  return errors;\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/ramprasathmeganathan/NodeProjects/ServerlessGITProjectRepo/ServerlessProject/src/Components/Register.js"],"names":["React","Component","register","Register","constructor","state","firstname","lastname","email","password","confirmpassword","role","errors","onChange","bind","onSubmit","e","setState","target","name","value","preventDefault","validate","length","setTimeout","window","alert","render","map","error","validEmailRegex","RegExp","push","test"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { register } from './UserFunctions'\n\n\nclass Register extends Component {\n    constructor() {\n        super()\n        this.state = {\n            firstname: '',\n            lastname:'',\n            email: '',\n            password: '',\n            confirmpassword:'',\n            role: 'student',\n            errors: []\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n        const errors = validate(this.state.firstname,this.state.lastname, this.state.email, this.state.password,this.state.confirmpassword)\n        if (errors.length > 0) {\n            this.setState({ errors });\n            setTimeout(() => { this.setState({ errors: [] }) }, 3000);\n        }\n        else {\n            window.alert('success')\n            this.state.firstname=''\n            this.state.lastname=''\n            this.state.email=''\n            this.state.password=''\n            this.state.confirmpassword=''\n            this.state.role='student'\n            this.errors = [];\n            this.setState({ errors });\n            // const user = {\n            //     firstname: this.state.firstname,\n            //     lastname: this.state.lastname,\n            //     email: this.state.email,\n            //     password: this.state.password,\n            //     role: this.state.role\n            // }\n            // register(user).then(res => {\n            //     console.log(res)\n            //     if (res === 'User already registered') {\n            //         errors.push(res)\n            //         this.setState({ errors });\n            //     }\n            //     else if (res === undefined) {\n            //         errors.push('User already registered')\n            //         this.setState({ errors });\n            //     }\n            //     else {\n            //         window.alert('User Registered successfully')\n            //         this.props.history.push('/')\n            //     }\n            // }).catch(err => {\n            //     if (err) {\n            //         errors.email('something wrong with the registration')\n            //     }\n            // })\n        }\n\n    }\n\n\n    render() \n    {\n        const { errors } = this.state;\n                    return (\n                                <div className=\"col-md-5 mt-5 mx-auto\">\n                                    <form noValidate onSubmit={this.onSubmit}>\n                                        <h2 className=\"h3 mb-3 font-weight-normal text-center\">\n                                            Please Register\n                                         </h2>\n                                        <div className=\"form-group\">\n                                            <input type=\"text\" className=\"form-control\"\n                                                name=\"firstname\"\n                                                placeholder=\"Enter first name\"\n                                                value={this.state.firstname}\n                                                onChange={this.onChange} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <input type=\"text\" className=\"form-control\"\n                                                name=\"lastname\"\n                                                placeholder=\"Enter last name\"\n                                                value={this.state.lastname}\n                                                onChange={this.onChange} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <input type=\"email\" className=\"form-control\"\n                                                name=\"email\"\n                                                placeholder=\"Enter email\"\n                                                value={this.state.email}\n                                                onChange={this.onChange} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <input type=\"password\" className=\"form-control\"\n                                                name=\"password\"\n                                                placeholder=\"Enter password\"\n                                                value={this.state.password}\n                                                onChange={this.onChange} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <input type=\"password\" className=\"form-control\"\n                                                name=\"confirmpassword\"\n                                                placeholder=\"Re-enter password\"\n                                                value={this.state.confirmpassword}\n                                                onChange={this.onChange} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <select defaultValue={this.state.role} onChange={this.onChange} className=\"form-control\">\n                                                <option value=\"student\">student</option>\n                                                <option value=\"staff\">staff</option>\n                                            </select>\n                                        </div>\n                                        <button type=\"submit\"\n                                            className=\"btn btn-md btn-primary btn-block\" onSubmit={this.onSubmit}>\n                                            Next\n                            </button>\n                                        <br />\n                                        {errors.map(error => (\n                                            <p key={error} className='error'>Error on Page: {error}</p>\n                                        ))}\n                                    </form>\n                                </div>\n\n                    )\n                }\n    }\n\n\n    const validate = (firstname,lastname, email, password,confirmpassword) => {\n        const errors = [];\n        const validEmailRegex =\n            RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n        if (firstname.length === 0) {\n            errors.push('first name is required')\n        }\n        if (lastname.length === 0) {\n            errors.push('last name is required')\n        }\n        if (!validEmailRegex.test(email)) {\n            errors.push(\"Email id is not valid\")\n        }\n        if (password < 1) {\n            errors.push(\"Password should be atleast 6 characters long\");\n        }\n        if (password!=confirmpassword) {\n            errors.push(\"Password and confirm password should match\");\n           \n        }\n        return errors;\n    }\n\n    export default Register\n"]},"metadata":{},"sourceType":"module"}