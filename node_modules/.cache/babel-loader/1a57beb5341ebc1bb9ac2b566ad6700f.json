{"ast":null,"code":"var _jsxFileName = \"/Users/ramprasathmeganathan/NodeProjects/ServerlessGITProjectRepo/ServerlessProject/src/Components/Register.js\";\nimport React, { Component } from 'react';\nimport { register } from './UserFunctions';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      selectTopic: 'student',\n      errors: []\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const errors = validate(this.state.name, this.state.email, this.state.password);\n\n    if (errors.length > 0) {\n      this.setState({\n        errors\n      });\n    } else {\n      const user = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        selectTopic: this.state.selectTopic\n      };\n      register(user).then(res => {\n        console.log(res);\n\n        if (res === 'User already registered') {\n          errors.push(res);\n          this.setState({\n            errors\n          });\n        } else if (res === undefined) {\n          errors.push('User already registered');\n          this.setState({\n            errors\n          });\n        } else {\n          window.alert('User Registered successfully');\n          this.props.history.push('/');\n        }\n      }).catch(err => {\n        if (err) {\n          errors.email('something wrong with the registration');\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 mt-5 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"h3 mb-3 front-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 41\n      }\n    }, \"Please Register\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"firstname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 45\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"firstname\",\n      placeholder: \"Enter name\",\n      value: this.state.firstname,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"lastname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 45\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"lastname\",\n      placeholder: \"Enter name\",\n      value: this.state.lastname,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 45\n      }\n    }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      name: \"email\",\n      placeholder: \"Enter email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 45\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      placeholder: \"Enter password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 45\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"confirmpassword\",\n      placeholder: \"Enter password\",\n      value: this.state.confirmpassword,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 45\n      }\n    }, \"Role\"), /*#__PURE__*/React.createElement(\"select\", {\n      defaultValue: this.state.selectTopic,\n      onChange: this.onChange,\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"aws\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 49\n      }\n    }, \"student\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"staff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 49\n      }\n    }, \"staff\")), errors.selectTopic && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 49\n      }\n    }, errors.selectTopic)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-md btn-primary btn-block\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 41\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 41\n      }\n    }), errors.map(error => /*#__PURE__*/React.createElement(\"p\", {\n      key: error,\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 45\n      }\n    }, \"Error on Page: \", error))))));\n  }\n\n}\n\nconst validate = (name, email, comment) => {\n  const errors = [];\n  const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\n  if (name.length === 0) {\n    errors.push('name is required');\n  }\n\n  if (!validEmailRegex.test(email)) {\n    errors.push(\"Email id is not valid\");\n  }\n\n  if (comment.length < 1) {\n    errors.push(\"Password should be atleast 6 characters long\");\n  }\n\n  return errors;\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/ramprasathmeganathan/NodeProjects/ServerlessGITProjectRepo/ServerlessProject/src/Components/Register.js"],"names":["React","Component","register","Register","constructor","state","firstname","lastname","email","password","selectTopic","errors","onChange","bind","onSubmit","e","setState","target","name","value","preventDefault","validate","length","user","then","res","console","log","push","undefined","window","alert","props","history","catch","err","render","confirmpassword","map","error","comment","validEmailRegex","RegExp","test"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAGA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7BG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,QAAQ,EAAC,EAFA;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,QAAQ,EAAE,EAJD;AAKTC,MAAAA,WAAW,EAAE,SALJ;AAMTC,MAAAA,MAAM,EAAE;AANC,KAAb;AAQA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AAEH;;AAEDD,EAAAA,QAAQ,CAACG,CAAD,EAAI;AACR,SAAKC,QAAL,CAAc;AAAE,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,KAAd;AACH;;AAEDL,EAAAA,QAAQ,CAACC,CAAD,EAAI;AACRA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMT,MAAM,GAAGU,QAAQ,CAAC,KAAKhB,KAAL,CAAWa,IAAZ,EAAkB,KAAKb,KAAL,CAAWG,KAA7B,EAAoC,KAAKH,KAAL,CAAWI,QAA/C,CAAvB;;AACA,QAAIE,MAAM,CAACW,MAAP,GAAgB,CAApB,EAAuB;AACnB,WAAKN,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACH,KAFD,MAGK;AACD,YAAMY,IAAI,GAAG;AACTL,QAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWa,IADR;AAETV,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAFT;AAGTC,QAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,QAHZ;AAITC,QAAAA,WAAW,EAAE,KAAKL,KAAL,CAAWK;AAJf,OAAb;AAMAR,MAAAA,QAAQ,CAACqB,IAAD,CAAR,CAAeC,IAAf,CAAoBC,GAAG,IAAI;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,YAAIA,GAAG,KAAK,yBAAZ,EAAuC;AACnCd,UAAAA,MAAM,CAACiB,IAAP,CAAYH,GAAZ;AACA,eAAKT,QAAL,CAAc;AAAEL,YAAAA;AAAF,WAAd;AACH,SAHD,MAIK,IAAIc,GAAG,KAAKI,SAAZ,EAAuB;AACxBlB,UAAAA,MAAM,CAACiB,IAAP,CAAY,yBAAZ;AACA,eAAKZ,QAAL,CAAc;AAAEL,YAAAA;AAAF,WAAd;AACH,SAHI,MAIA;AACDmB,UAAAA,MAAM,CAACC,KAAP,CAAa,8BAAb;AACA,eAAKC,KAAL,CAAWC,OAAX,CAAmBL,IAAnB,CAAwB,GAAxB;AACH;AACJ,OAdD,EAcGM,KAdH,CAcSC,GAAG,IAAI;AACZ,YAAIA,GAAJ,EAAS;AACLxB,UAAAA,MAAM,CAACH,KAAP,CAAa,uCAAb;AACH;AACJ,OAlBD;AAmBH;AAEJ;;AAGD4B,EAAAA,MAAM,GACN;AACI,UAAM;AAAEzB,MAAAA;AAAF,QAAa,KAAKN,KAAxB;AACY,wBAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,QAAQ,EAAE,KAAKS,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AACI,MAAA,IAAI,EAAC,WADT;AAEI,MAAA,WAAW,EAAC,YAFhB;AAGI,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,SAHtB;AAII,MAAA,QAAQ,EAAE,KAAKM,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAJJ,eAYI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,WAAW,EAAC,YAFhB;AAGI,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE,QAHtB;AAII,MAAA,QAAQ,EAAE,KAAKK,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAZJ,eAoBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAC,cAA9B;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,WAAW,EAAC,aAFhB;AAGI,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWG,KAHtB;AAII,MAAA,QAAQ,EAAE,KAAKI,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CApBJ,eA4BI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC,cAAjC;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,WAAW,EAAC,gBAFhB;AAGI,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWI,QAHtB;AAII,MAAA,QAAQ,EAAE,KAAKG,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA5BJ,eAoCI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC,cAAjC;AACI,MAAA,IAAI,EAAC,iBADT;AAEI,MAAA,WAAW,EAAC,gBAFhB;AAGI,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWgC,eAHtB;AAII,MAAA,QAAQ,EAAE,KAAKzB,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CApCJ,eA4CI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,MAAA,YAAY,EAAE,KAAKP,KAAL,CAAWK,WAAjC;AAA8C,MAAA,QAAQ,EAAE,KAAKE,QAA7D;AAAuE,MAAA,SAAS,EAAC,cAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CAFJ,EAMKD,MAAM,CAACD,WAAP,iBACG;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBC,MAAM,CAACD,WAAhC,CAPR,CA5CJ,eAqDI;AAAQ,MAAA,IAAI,EAAC,QAAb;AACI,MAAA,SAAS,EAAC,kCADd;AACiD,MAAA,QAAQ,EAAE,KAAKI,QADhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArDJ,eAyDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzDJ,EA0DKH,MAAM,CAAC2B,GAAP,CAAWC,KAAK,iBACb;AAAG,MAAA,GAAG,EAAEA,KAAR;AAAe,MAAA,SAAS,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiDA,KAAjD,CADH,CA1DL,CADJ,CADJ,CADJ,CAFJ;AAuEH;;AAnIgB;;AAuI7B,MAAMlB,QAAQ,GAAG,CAACH,IAAD,EAAOV,KAAP,EAAcgC,OAAd,KAA0B;AACvC,QAAM7B,MAAM,GAAG,EAAf;AACA,QAAM8B,eAAe,GACjBC,MAAM,CAAC,wJAAD,CADV;;AAEA,MAAIxB,IAAI,CAACI,MAAL,KAAgB,CAApB,EAAuB;AACnBX,IAAAA,MAAM,CAACiB,IAAP,CAAY,kBAAZ;AACH;;AACD,MAAI,CAACa,eAAe,CAACE,IAAhB,CAAqBnC,KAArB,CAAL,EAAkC;AAC9BG,IAAAA,MAAM,CAACiB,IAAP,CAAY,uBAAZ;AACH;;AACD,MAAIY,OAAO,CAAClB,MAAR,GAAiB,CAArB,EAAwB;AACpBX,IAAAA,MAAM,CAACiB,IAAP,CAAY,8CAAZ;AACH;;AACD,SAAOjB,MAAP;AACH,CAdD;;AAgBA,eAAeR,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport { register } from './UserFunctions'\n\n\nclass Register extends Component {\n    constructor() {\n        super()\n        this.state = {\n            firstname: '',\n            lastname:'',\n            email: '',\n            password: '',\n            selectTopic: 'student',\n            errors: []\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n        const errors = validate(this.state.name, this.state.email, this.state.password)\n        if (errors.length > 0) {\n            this.setState({ errors });\n        }\n        else {\n            const user = {\n                name: this.state.name,\n                email: this.state.email,\n                password: this.state.password,\n                selectTopic: this.state.selectTopic\n            }\n            register(user).then(res => {\n                console.log(res)\n                if (res === 'User already registered') {\n                    errors.push(res)\n                    this.setState({ errors });\n                }\n                else if (res === undefined) {\n                    errors.push('User already registered')\n                    this.setState({ errors });\n                }\n                else {\n                    window.alert('User Registered successfully')\n                    this.props.history.push('/')\n                }\n            }).catch(err => {\n                if (err) {\n                    errors.email('something wrong with the registration')\n                }\n            })\n        }\n\n    }\n\n\n    render() \n    {\n        const { errors } = this.state;\n                    return (\n\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-md-5 mt-5 mx-auto\">\n                                    <form noValidate onSubmit={this.onSubmit}>\n                                        <h1 className=\"h3 mb-3 front-weight-normal\">\n                                            Please Register\n                            </h1>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"firstname\">First Name</label>\n                                            <input type=\"text\" className=\"form-control\"\n                                                name=\"firstname\"\n                                                placeholder=\"Enter name\"\n                                                value={this.state.firstname}\n                                                onChange={this.onChange} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"lastname\">Last Name</label>\n                                            <input type=\"text\" className=\"form-control\"\n                                                name=\"lastname\"\n                                                placeholder=\"Enter name\"\n                                                value={this.state.lastname}\n                                                onChange={this.onChange} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"email\">Email Address</label>\n                                            <input type=\"email\" className=\"form-control\"\n                                                name=\"email\"\n                                                placeholder=\"Enter email\"\n                                                value={this.state.email}\n                                                onChange={this.onChange} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"password\">Password</label>\n                                            <input type=\"password\" className=\"form-control\"\n                                                name=\"password\"\n                                                placeholder=\"Enter password\"\n                                                value={this.state.password}\n                                                onChange={this.onChange} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"password\">Password</label>\n                                            <input type=\"password\" className=\"form-control\"\n                                                name=\"confirmpassword\"\n                                                placeholder=\"Enter password\"\n                                                value={this.state.confirmpassword}\n                                                onChange={this.onChange} />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label>Role</label>\n                                            <select defaultValue={this.state.selectTopic} onChange={this.onChange} className=\"form-control\">\n                                                <option value=\"aws\">student</option>\n                                                <option value=\"staff\">staff</option>\n                                            </select>\n                                            {errors.selectTopic &&\n                                                <span className='error'>{errors.selectTopic}</span>}\n                                        </div>\n                                        <button type=\"submit\"\n                                            className=\"btn btn-md btn-primary btn-block\" onSubmit={this.onSubmit}>\n                                            Register\n                            </button>\n                                        <br />\n                                        {errors.map(error => (\n                                            <p key={error} className='error'>Error on Page: {error}</p>\n                                        ))}\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n    }\n\n\n    const validate = (name, email, comment) => {\n        const errors = [];\n        const validEmailRegex =\n            RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n        if (name.length === 0) {\n            errors.push('name is required')\n        }\n        if (!validEmailRegex.test(email)) {\n            errors.push(\"Email id is not valid\")\n        }\n        if (comment.length < 1) {\n            errors.push(\"Password should be atleast 6 characters long\");\n        }\n        return errors;\n    }\n\n    export default Register\n"]},"metadata":{},"sourceType":"module"}